<!-- Este archivo es importante..aqui se indica la configuración de acceso a la base
de datos. Además permite establecer donde buscar los mapeo-->

<!-- Primero establecemos un name space para indicar que tipo de gestión se realiza en 
archivo-->
<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
             http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
             version="2.0" xmlns="http://java.sun.com/xml/ns/persistence">

  <persistence-unit name="biblioteca"> <!-- La unidad de persistencia que se gestionará se
denominará biblioteca, básicamente es también el nombre de la BD-->

<class>ar.edu.unju.fi.aplicacion.modelo.dominio.Libro</class>


    <!-- Aqui se realizan las configuraciones más importantes -->
    <properties>
        <!-- Driver JDBC para que Java pueda conectarse a H2-->
        <property name="javax.persistence.jdbc.driver" value="org.h2.Driver" />
        <!-- Ubicación de la base de daos y la forma de acceso. Es único para para BD-->
        <property name="javax.persistence.jdbc.url" value="jdbc:h2:~/Downloads/prueba2" />
        <!-- credenciales de acceso a la base de datos-->
        <property name="javax.persistence.jdbc.user" value="sa" />
        <property name="javax.persistence.jdbc.password" value="" />
        <!-- El dialecto establece una correspondencia entre los tipos de datos Java con
        los de la base de datos H"-->
        <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" />
        <!-- Esta política permite indicar como se generan las tablas del modelo de objetos-->
        <property name="hibernate.hbm2ddl.auto" value="create-drop" />
        <!-- Visualizar las Sentencias SQL-->
        <property name="show_sql" value="true" />
    </properties>
  </persistence-unit>

</persistence>